#!/bin/sh

# Exit if any subcommand fails
set -e

bundle gem $1 --no-coc --no-git --no-mit --test=rspec
cd "$1"

sed -i '.deleteme' "s/TODO: Put your gem\'s website or public repo URL here./https:\/\/changethisurl.com/g" "$1.gemspec"
sed -i '.deleteme' "s/TODO: Put your gem\'s public repo URL here./https:\/\/changethisurltoo.com/g" "$1.gemspec"
sed -i '.deleteme' "s/TODO: Put your gem\'s CHANGELOG.md URL here./https:\/\/changethisurl.com/g" "$1.gemspec"
sed -i '.deleteme' "s/TODO:/STUPID:/g" "$1.gemspec"
rm "$1.gemspec.deleteme"

# Set up Ruby dependencies
bundle update

# Create new, blank README template
cat ../README.md.template >> README.md
#mv ../README.md.template README.md

# append extra onto the rails-generated gitignore
cat ../gitignore.dotfile >> .gitignore

cat ../Gemfile.append >> Gemfile
cp ../Gemfile.local ./
cp ../Gemfile.local.example ./

# Create RSpec framework
bundle exec rspec --init

cat << EOF > /tmp/newfile.rb
begin
require 'simplecov'
  SimpleCov.start
rescue LoadError
  # simplecov not installed. That's OK.
end
EOF
cat spec/spec_helper.rb >> /tmp/newfile.rb
mv /tmp/newfile.rb spec/spec_helper.rb

# Create Guard install
bundle update
bundle exec guard init
bundle exec guard init rspec

# Tidy up generated code
rubocop --auto-correct . || true

# Replace this project's git with a new, clean repo
rm -rf ./.git
git init
git add .
git commit -am 'Initial commit'
